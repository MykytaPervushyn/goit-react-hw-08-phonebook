{"version":3,"sources":["App.module.css","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-reducer.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/Container/Container.js","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","views/HomeView.js","views/RegisterView.js","views/LoginView.js"],"names":["module","exports","Navigation","to","className","isActive","s","active","link","styles","container","display","alignItems","avatar","marginRight","name","fontWeight","UserMenu","dispatch","useDispatch","useSelector","authSelectors","getUsername","style","type","onClick","authOperations","logOut","AuthNav","header","justifyContent","textDecoration","padding","borderBottom","fontSize","AppBar","isLoggedIn","getIsLoggedIn","PrivateRoute","children","redirectTo","PublicRoute","restricted","App","isFetchingCurrentUser","getFetchingCurrent","useEffect","fetchCurrentUser","HomeView","lazy","RegisterView","LoginView","ContactsView","Container","heigth","width","color","arialLabel","fallback","path","element","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","ContactList","getVisibleContacts","list","map","id","number","item","text","button","contactsOperations","deleteContact","size","ContactForm","useState","setName","setNumber","getContacts","handleChange","e","target","value","reset","contactForm","onSubmit","preventDefault","find","contact","alert","addContact","formWrap","label","input","onChange","pattern","title","required","Filter","getFilter","changeFilter","ContactView","params","isLoadingContacts","contactsSelectors","getLoading","fetchContacts","content","labelName","state","items","filter","normalizedFilter","toLowerCase","includes","getTotalContactCount","length","createReducer","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","_","payload","error","toast","console","log","combineReducers","createAction","axios","get","then","data","catch","message","post","success","delete","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","logIn","thunkAPI","getState","persistedToken","rejectWithValue","operations","user","authSlice","createSlice","initialState","email","isFetchingCarrentUser","extraReducers","fulfilled","action","pending","rejected","minHeight","textAlign","role","form","flexDirection","marginBottom","setEmail","password","setPassword","autoComplete"],"mappings":"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","file":"static/js/main.9c9034f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1h37R\",\"loader\":\"App_loader__39SvT\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink to=\"/\" className={({ isActive }) => isActive ? s.active : s.link}>Home</NavLink>\r\n\r\n    <NavLink to=\"/contacts\" className={({ isActive }) => isActive ? s.active : s.link}>Contacts</NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={({ isActive }) => (isActive ? s.active : s.link)}\r\n      >\r\n        Sign up\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={({ isActive }) => (isActive ? s.active : s.link)}\r\n      >\r\n        Sign in\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\n// import styles from './AppBar.module.css';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    borderBottom: '1px solid #2A363B',\r\n    fontSize: '18px',\r\n    // backgroundColor: 'orange',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <header style={styles.header}>\r\n            <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nexport default function PrivateRoute({ children, redirectTo = '/' }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\r\n}","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return shouldRedirect ? <Navigate to={redirectTo} /> : children;\r\n}","// import ContactForm from './components/ContactForm';\r\n// import ContactList from './components/ContactList';\r\n// import Filter from './components/Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport ContactsView from './views/ContactsView';\r\nimport HomeView from './views/HomeView';\r\nimport RegisterView from './views/RegisterView';\r\nimport LoginView from './views/LoginView';\r\nimport Container from './components/Container';\r\n// import { useFetchContactsQuery, } from './redux/contacts/contactsSlice';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { useEffect, lazy, Suspense } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { Audio } from \"react-loader-spinner\";\r\nimport s from './App.module.css';\r\n\r\nimport { authOperations, authSelectors } from './redux/auth';\r\n\r\n\r\n\r\nexport default function App() {\r\n//   const [filter, setFilter] = useState('');\r\n\r\n//   const { data: contacts, isFetching } = useFetchContactsQuery();\r\n//   console.log(contacts);\r\n\r\n//   const getFiltredContacts = data =>\r\n//     data.filter(contact =>\r\n//       contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n//     );\r\n\r\n//   const handleChange = e => {\r\n//     setFilter(e.target.value)\r\n//   }\r\n  \r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(authSelectors.getFetchingCurrent);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n  \r\n  const HomeView = lazy(() =>\r\n    import('views/HomeView.js' /* webpackChunkName: \"HomeView\" */),\r\n  );\r\n  const RegisterView = lazy(() =>\r\n    import('views/RegisterView.js' /* webpackChunkName: \"RegisterView\" */),\r\n  );\r\n  const LoginView = lazy(() =>\r\n    import('views/LoginView.js' /* webpackChunkName: \"LoginView\" */),\r\n  );\r\n  const ContactsView = lazy(() =>\r\n    import('views/ContactsView.js' /* webpackChunkName: \"ContactsView\" */),\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {/* <h1>Phonebook</h1>\r\n      <ContactForm contacts={contacts}/>\r\n      <h2>Contacts</h2>\r\n      <Filter onChange={handleChange} />\r\n      {!isFetching && <ContactList contacts={getFiltredContacts(contacts)}\r\n      />} */}\r\n      {isFetchingCurrentUser ? (\r\n        <Audio\r\n          heigth=\"300\"\r\n          width=\"300\"\r\n          color='grey'\r\n          arialLabel='loading'/>\r\n      ) : (\r\n      <>\r\n      <AppBar />\r\n\r\n      <Suspense fallback={\r\n        <Audio\r\n          heigth=\"300\"\r\n          width=\"300\"\r\n          color='grey'\r\n          arialLabel='loading'/>\r\n      }>\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                element={\r\n                  <PublicRoute>\r\n                    <HomeView />\r\n                  </PublicRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/register\"\r\n                element={\r\n                  <PublicRoute restricted>\r\n                    <RegisterView />\r\n                  </PublicRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/login\"\r\n                element={\r\n                  <PublicRoute redirectTo=\"/contacts\" restricted>\r\n                    <LoginView />\r\n                  </PublicRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/contacts\"\r\n                element={\r\n                  <PrivateRoute redirectTo=\"/login\">\r\n                    <ContactsView />\r\n                  </PrivateRoute>\r\n                }\r\n              />\r\n            </Routes>\r\n          </Suspense></>)}\r\n    </Container>\r\n  )\r\n}","import { configureStore, } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger'\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth';\r\nimport { contactsReducer } from './contacts';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,]\r\n    }\r\n  })\r\n    .concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  \r\n});\r\n\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/contacts/contacts-selectors';\r\nimport { contactsOperations } from 'redux/contacts';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.text}>{`${name}: ${number}`}</p>\r\n          <button className={s.button} type='button' aria-label='Delete contact' onClick={() => deleteContact(id)}>\r\n            <MdDelete size='30' />\r\n        </button> \r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from 'redux/contacts/contacts-selectors';\r\nimport contactsOperations from 'redux/contacts/contacts-operations';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in contacts`) || reset();\r\n    } else if (contacts.find(contact => contact.number === number)) {\r\n      return alert(`${number} is already in contacts`) || reset();\r\n    }\r\n    \r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n    reset();\r\n\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  \r\n\r\n  return (\r\n    <form className={s.contactForm}\r\n      onSubmit={handleSubmit}\r\n    >\r\n        <div className={s.formWrap}>\r\n          <label className={s.label}>\r\n            Name{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={handleChange}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  contacts: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input className={s.input} type=\"text\" value={value}\r\n        onChange={ e => dispatch(changeFilter(e.target.value)) } />\r\n    </label>\r\n  );\r\n};\r\n\r\n\r\nexport default Filter;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Container from '../components/Container';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\r\nimport s from './Views.module.css';\r\n\r\nconst barStyles = {\r\n  // display: 'flex',\r\n  // alignItems: 'flex-end',\r\n  marginBottom: 20,\r\n};\r\n\r\nexport default function ContactView(params) {\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts  = useSelector(contactsSelectors.getLoading);\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    // <Container>\r\n    //   <div style={barStyles}>\r\n    //     <ContactForm />\r\n    //     <Filter />\r\n\r\n    //     {isLoadingContacts  && <h1>Loading...</h1>}\r\n    //   </div>\r\n\r\n    //   <ContactList />\r\n\r\n    // </Container>\r\n\r\n    <main>\r\n      <Container>\r\n        <div className={s.container}>\r\n          <ContactForm />\r\n          <div className={s.content}>\r\n            <Filter labelName='Find contacts by name' />\r\n            {isLoadingContacts  && <h1>Loading...</h1>}\r\n            <ContactList />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </main>\r\n  );\r\n}","export const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst getTotalContactCount = state => {\r\n  const contacts = getContacts(state);\r\n  return contacts.length;\r\n};\r\n\r\nconst contactsSelectors = {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getTotalContactCount,\r\n};\r\n\r\nexport default contactsSelectors;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1TWqf\",\"formWrap\":\"ContactForm_formWrap__3An1U\",\"label\":\"ContactForm_label__2s0tC\",\"input\":\"ContactForm_input__3fgn0\",\"button\":\"ContactForm_button__183O0\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => toast.error(payload),\r\n  [addContactError]: error => console.log(error),\r\n  [deleteContactError]: error => console.log(error),\r\n});\r\n\r\nexport default combineReducers({\r\n  loading,\r\n  items,\r\n  filter,\r\n  error,\r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1L53a\",\"active\":\"Navigation_active__1EV0D Navigation_link__1L53a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2J8CY\",\"active\":\"AuthNav_active__2Yvl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3tb_0\",\"item\":\"ContactList_item__25XdA\",\"text\":\"ContactList_text__Dz4RV\",\"button\":\"ContactList_button__3mtDN\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => {\r\n        dispatch(addContactSuccess(data));\r\n        toast.success('Contact successfully created');\r\n      })\r\n      .catch(error => dispatch(addContactError(error.message)));\r\n  };\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(deleteContactSuccess(id));\r\n      toast.success('Contact successfully deleted');\r\n    })\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;","import styles from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__7OCb7\",\"input\":\"Filter_input__2pvLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3JY6a\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n      toast.error(error.message);\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n      toast.error(error.message);\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n * После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n      toast.error(error.message);\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      console.log('Токена нет, уходим из fetchCurrentUser');\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n        toast.error(error.message);\r\n      // TODO: Добавить обработку ошибки error.message\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getFetchingCurrent,\r\n};\r\nexport default authSelectors;","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCarrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n      },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import React from 'react';\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: 'calc(100vh - 50px)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    fontSize: 48,\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nconst HomeView = () => (\r\n  <div style={styles.container}>\r\n    <h1 style={styles.title}>\r\n      Welcome to our phonebook{' '}\r\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\r\n        💁‍♀️\r\n      </span>\r\n    </h1>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign up page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Name\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Sign up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign in page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Sign in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"sourceRoot":""}